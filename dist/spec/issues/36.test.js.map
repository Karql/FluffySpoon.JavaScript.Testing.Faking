{"version":3,"file":"36.test.js","sourceRoot":"","sources":["../../../spec/issues/36.test.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,iBAoBA;;AApBA,2BAAuB;AAEvB,yCAAkD;AAKlD,aAAI,CAAC,sDAAsD,EAAE,UAAM,CAAC;;;;;gBAC1D,UAAU,GAAG,kBAAU,CAAC,GAAG,EAAU,CAAC;gBACtC,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;gBACvB,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAQ;oBACvD,WAAW,EAAE,GAAG;oBAChB,IAAI,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;iBACnB,CAAC,CAAC,CAAC;gBACW,qBAAM,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,EAAA;;gBAA1C,MAAM,GAAG,SAAiC;gBAChD,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,YAAY,IAAI,EAAE,+BAA+B,CAAC,CAAC;gBAC5E,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,WAAW,EAAE,GAAG,EAAE,oBAAoB,CAAC,CAAC;gBACpD,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,oBAAoB,CAAC,CAAC;gBAC3D,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,uBAAuB,CAAC,CAAC;;;;KAC5D,CAAC,CAAC","sourcesContent":["import test from 'ava';\r\n\r\nimport { Substitute, Arg } from '../../src/index';\r\n\r\ninterface IData { serverCheck: Date, data: { a: any[] } }\r\ninterface IFetch { getUpdates: (arg: Date | null) => Promise<IData>  }\r\n\r\ntest('issue 36 - promises returning object with properties', async t => {\r\n    const emptyFetch = Substitute.for<IFetch>();\r\n    const now = new Date();\r\n    emptyFetch.getUpdates(null).returns(Promise.resolve<IData>({\r\n        serverCheck: now,\r\n        data: { a: [1] }\r\n    }));\r\n    const result = await emptyFetch.getUpdates(null);\r\n    t.true(result.serverCheck instanceof Date, 'given date is instanceof Date');\r\n    t.is(result.serverCheck, now, 'dates are the same');\r\n    t.true(Array.isArray(result.data.a), 'deep array isArray');\r\n    t.deepEqual(result.data.a, [1], 'arrays are deep equal');\r\n});\r\n"]}